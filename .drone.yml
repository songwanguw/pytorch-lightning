# Copyright The PyTorch Lightning team.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# https://docs.drone.io/pipeline/docker/examples/languages/python/#python-example

kind: pipeline
type: docker
name: torch-GPU

steps:
- name: testing
  image: pytorchlightning/pytorch_lightning:base-cuda-py3.7-torch1.6

  environment:
    CODECOV_TOKEN:
      from_secret: codecov_token
    MKL_THREADING_LAYER: GNU

  commands:
    - python --version
    - pip --version
    - nvidia-smi
    - pip install -r ./requirements/devel.txt --upgrade-strategy only-if-needed -v --no-cache-dir
    # when Image has defined CUDa version we can switch to this package spec "nvidia-dali-cuda${CUDA_VERSION%%.*}0"
    - pip install --extra-index-url https://developer.download.nvidia.com/compute/redist nvidia-dali-cuda100 --upgrade-strategy only-if-needed
    - pip list
    - coverage run --source pytorch_lightning -m pytest pytorch_lightning tests -v --color=yes --durations=25 # --flake8
    - python -m pytest benchmarks pl_examples -v --color=yes --maxfail=2 --durations=0 # --flake8
    #- cd docs; make doctest; make coverage
    - coverage report
    # see: https://docs.codecov.io/docs/merging-reports
    - codecov --token $CODECOV_TOKEN --flags=gpu,pytest --name="GPU-coverage" --env=linux --build $DRONE_BUILD_NUMBER --commit $DRONE_COMMIT
    # --build $DRONE_BUILD_NUMBER --branch $DRONE_BRANCH --commit $DRONE_COMMIT --tag $DRONE_TAG --pr $DRONE_PULL_REQUEST
    # - codecov --token $CODECOV_TOKEN --flags=gpu,pytest --build $DRONE_BUILD_NUMBER
    - python tests/collect_env_details.py

trigger:
  branch:
    - master
    - release/*
  event:
    include:
    - push
    - pull_request
